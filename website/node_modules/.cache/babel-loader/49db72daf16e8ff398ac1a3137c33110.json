{"ast":null,"code":"import _classCallCheck from \"/Users/triggan/Documents/Code/neptune-workshop-ui/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/triggan/Documents/Code/neptune-workshop-ui/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/triggan/Documents/Code/neptune-workshop-ui/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/triggan/Documents/Code/neptune-workshop-ui/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/triggan/Documents/Code/neptune-workshop-ui/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/triggan/Documents/Code/neptune-workshop-ui/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/triggan/Documents/Code/neptune-workshop-ui/src/App.js\";\nimport React, { Component } from 'react';\nimport logo from './gremlin-neptune.png';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport ReactJson from 'react-json-view';\nimport './App.css';\nvar apigateway = \"https://8e9hxfks6f.execute-api.us-west-2.amazonaws.com/prod\";\n\nfunction setGraphTraversal(movieName) {\n  return \"g.V().hasLabel('movie').has('name','\" + movieName + \"').limit(5)\";\n} //setGraphTraversal\n\n\nfunction getGraphOutput(actorName) {\n  var request = new XMLHttpRequest();\n  var requestURL = apigateway + \"/actor/?actor=\" + actorName;\n  request.open('GET', requestURL, true);\n\n  request.onload = function () {\n    // Begin accessing JSON data here\n    var data = JSON.parse(this.response);\n\n    if (request.status >= 200 && request.status < 400) {// DO something with response\n    } else {\n      return \"ERROR\";\n    }\n  };\n\n  request.send();\n} //getGraphOutput\n\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      name: \"\",\n      graphoutput: \"\",\n      traversal: \"\",\n      showOutput: false\n    };\n    _this.updateGraphResults = _this.updateGraphResults.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  } //end constructor\n\n\n  _createClass(App, [{\n    key: \"updateGraphResults\",\n    value: function updateGraphResults(showOutput) {\n      console.log(\"Update graph results called.\");\n      console.log(showOutput);\n\n      if (showOutput) {\n        console.log(\"Changed Output to True.\");\n        return React.createElement(ReactJson, {\n          src: this.state.graphoutput,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        });\n      }\n\n      console.log(\"Setting output to false.\");\n      return \"\";\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(event) {\n      var graphTrav = setGraphTraversal(event.target.movieInput.value);\n      var graphResults = getGraphOutput(event.target.movieInput.value);\n      this.setState({\n        traversal: graphTrav,\n        graphoutput: graphResults,\n        showOutput: true\n      });\n      console.log(event.target.movieInput.value);\n      event.preventDefault();\n    } //end handleSubmit\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        className: \"App-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: logo,\n        className: \"App-logo\",\n        alt: \"logo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \"Welcome to AWS re:Invent 2018 Workshop: \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }), \"DAT310 - Building a New Graph Application Using Amazon Neptune.\")), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }), React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        id: \"movieInput\",\n        label: \"Find the Six Degrees of Kevin Bacon:\",\n        style: {\n          margin: 8,\n          width: 600\n        },\n        placeholder: \"<Insert Actor/Actress Name Here>\",\n        helperText: \"Ex: Jack Nicholson\",\n        margin: \"normal\",\n        InputLabelProps: {\n          shrink: true\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }), React.createElement(Button, {\n        variant: \"contained\",\n        size: \"medium\",\n        color: \"primary\",\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, \"Go!\")), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }), React.createElement(Paper, {\n        className: \"graph-output\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        align: \"left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, \"Graph Traversal:\"), React.createElement(\"p\", {\n        align: \"left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, this.state.traversal)), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }), React.createElement(Paper, {\n        className: \"graph-output\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        align: \"left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, \"Graph Traversal Output:\"), React.createElement(\"div\", {\n        align: \"left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, this.updateGraphResults)));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/triggan/Documents/Code/neptune-workshop-ui/src/App.js"],"names":["React","Component","logo","TextField","Button","Paper","ReactJson","apigateway","setGraphTraversal","movieName","getGraphOutput","actorName","request","XMLHttpRequest","requestURL","open","onload","data","JSON","parse","response","status","send","App","props","state","name","graphoutput","traversal","showOutput","updateGraphResults","bind","handleSubmit","console","log","event","graphTrav","target","movieInput","value","graphResults","setState","preventDefault","margin","width","shrink"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport logo from './gremlin-neptune.png';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport ReactJson from 'react-json-view';\nimport './App.css';\n\nvar apigateway = \"https://8e9hxfks6f.execute-api.us-west-2.amazonaws.com/prod\";\n\nfunction setGraphTraversal(movieName) {\n  return \"g.V().hasLabel('movie').has('name','\" + movieName + \"').limit(5)\";\n} //setGraphTraversal\n\nfunction getGraphOutput(actorName) {\n  var request = new XMLHttpRequest();\n\n  var requestURL = apigateway + \"/actor/?actor=\" + actorName\n\n  request.open('GET', requestURL , true);\n  request.onload = function () {\n\n    // Begin accessing JSON data here\n    var data = JSON.parse(this.response);\n\n    if (request.status >= 200 && request.status < 400) {\n      // DO something with response\n    } else {\n      return \"ERROR\";\n    }\n  }\n\n  request.send();\n} //getGraphOutput\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = { \n      name: \"\",\n      graphoutput: \"\",\n      traversal: \"\",\n      showOutput: false\n     };\n\n    this.updateGraphResults = this.updateGraphResults.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  } //end constructor\n\n  updateGraphResults(showOutput) {\n    console.log(\"Update graph results called.\")\n    console.log(showOutput)\n    if(showOutput) {\n      console.log(\"Changed Output to True.\")\n      return <ReactJson src={this.state.graphoutput}/>;\n    }\n    console.log(\"Setting output to false.\")\n    return \"\";\n  }\n\n  handleSubmit(event) {\n    var graphTrav = setGraphTraversal(event.target.movieInput.value);\n    var graphResults = getGraphOutput( event.target.movieInput.value );\n    this.setState( { \n      traversal: graphTrav,\n      graphoutput: graphResults,\n      showOutput: true\n    } );\n    console.log(event.target.movieInput.value)\n    event.preventDefault();\n  } //end handleSubmit\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <p>\n            Welcome to AWS re:Invent 2018 Workshop: <br/>\n            DAT310 - Building a New Graph Application Using Amazon Neptune.\n          </p>\n        </header>\n        <br/>\n        <form onSubmit={this.handleSubmit}>\n          <TextField\n            id=\"movieInput\"\n            label=\"Find the Six Degrees of Kevin Bacon:\"\n            style={{ margin: 8, width: 600 }}\n            placeholder=\"<Insert Actor/Actress Name Here>\"\n            helperText=\"Ex: Jack Nicholson\"\n            margin=\"normal\"\n            InputLabelProps={{\n              shrink: true,\n            }}\n          /><br/>\n          <Button variant=\"contained\" size=\"medium\" color=\"primary\" type=\"submit\">\n            Go!\n          </Button>\n        </form><br/><br/>\n        <Paper className=\"graph-output\">\n            <h3 align=\"left\">Graph Traversal:</h3>\n            <p align=\"left\">\n              {this.state.traversal}\n            </p>\n        </Paper>\n        <br/>\n        <Paper className=\"graph-output\">\n            <h3 align=\"left\">Graph Traversal Output:</h3>\n            <div align=\"left\">\n              {this.updateGraphResults}\n            </div>\n        </Paper>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
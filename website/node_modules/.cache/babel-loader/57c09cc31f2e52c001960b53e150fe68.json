{"ast":null,"code":"import _classCallCheck from \"/Users/triggan/Documents/Code/neptune-workshop-ui/website/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/triggan/Documents/Code/neptune-workshop-ui/website/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/triggan/Documents/Code/neptune-workshop-ui/website/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/triggan/Documents/Code/neptune-workshop-ui/website/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/triggan/Documents/Code/neptune-workshop-ui/website/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/triggan/Documents/Code/neptune-workshop-ui/website/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/triggan/Documents/Code/neptune-workshop-ui/website/src/App.js\";\nimport React, { Component } from 'react';\nimport logo from './gremlin-neptune.png';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport ReactJson from 'react-json-view';\nimport './App.css';\n\nfunction async_get(url, callback) {\n  var xmlhttp = new XMLHttpRequest();\n\n  xmlhttp.onreadystatechange = function () {\n    if (xmlhttp.readyState == 4 && xmlhttp.status == 200) {\n      console.log('responseText:' + xmlhttp.responseText);\n\n      try {\n        var data = JSON.parse(xmlhttp.responseText);\n      } catch (err) {\n        console.log(err.message + \" in \" + xmlhttp.responseText);\n        return;\n      }\n\n      callback(data);\n    }\n  };\n\n  xmlhttp.open(\"GET\", url, true);\n  xmlhttp.send();\n} //end function async_get\n\n\nvar currentS3path = window.location.hostname;\nconsole.log(currentS3path);\nvar url = \"https://\" + currentS3path + \"/api.json\"; //var url = \"https://s3.eu-central-1.amazonaws.com/neptunewsdtr/api.json\"\n\nconsole.log(url);\nvar apiResponse = \"\";\nasync_get(url, function (response) {\n  apiResponse = JSON.parse(response.responseText);\n});\nconsole.log(apiResponse);\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      name: \"\",\n      graphoutput: \"{}\",\n      traversal: \"\",\n      showOutput: false\n    };\n    _this.getGraphOutput = _this.getGraphOutput.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  } //end constructor\n\n\n  _createClass(App, [{\n    key: \"getGraphOutput\",\n    value: function getGraphOutput(actorName) {\n      var request = new XMLHttpRequest();\n      var self = this;\n      var requestURL = apiResponse.APIPATH + \"/actor/?actor=\" + actorName;\n      request.open('GET', requestURL, true);\n\n      request.onload = function () {\n        // Begin accessing JSON data here\n        var data = JSON.parse(this.response);\n\n        if (request.status >= 200 && request.status < 400) {\n          self.setState({\n            graphoutput: data,\n            showOutput: true\n          });\n        } else {\n          return \"ERROR\";\n        }\n      };\n\n      request.send();\n    } //getGraphOutput\n\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(event) {\n      var newTraversal = \"g.V().has('name','\" + event.target.movieInput.value + \"').repeat(out().in().simplePath())\" + \".until(has('name','Kevin Bacon')).path().by('name').by('title').limit(10)\";\n      this.getGraphOutput(event.target.movieInput.value);\n      this.setState({\n        name: event.target.movieInput.value,\n        traversal: newTraversal\n      });\n      console.log(event.target.movieInput.value);\n      event.preventDefault();\n    } //end handleSubmit\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        className: \"App-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: logo,\n        className: \"App-logo\",\n        alt: \"logo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, \"Welcome to AWS re:Invent 2018 Workshop: \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }), \"DAT310 - Building Your First Graph Application Using Amazon Neptune\")), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }), React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        id: \"movieInput\",\n        label: \"Find the Six Degrees of Kevin Bacon:\",\n        style: {\n          margin: 8,\n          width: 600\n        },\n        placeholder: \"<Insert Actor/Actress Name Here>\",\n        helperText: \"Ex: Jack Nicholson\",\n        margin: \"normal\",\n        InputLabelProps: {\n          shrink: true\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }), React.createElement(Button, {\n        variant: \"contained\",\n        size: \"medium\",\n        color: \"primary\",\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, \"Go!\")), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }), React.createElement(Paper, {\n        className: \"graph-output\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        align: \"left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, \"Graph Traversal:\"), React.createElement(\"p\", {\n        align: \"left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        id: \"graph-traversal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, this.state.traversal))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }), React.createElement(Paper, {\n        className: \"graph-output\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        align: \"left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, \"Graph Traversal Output:\"), React.createElement(\"div\", {\n        align: \"left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, this.state.showOutput ? React.createElement(ReactJson, {\n        src: this.state.graphoutput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }) : null)), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/triggan/Documents/Code/neptune-workshop-ui/website/src/App.js"],"names":["React","Component","logo","TextField","Button","Paper","ReactJson","async_get","url","callback","xmlhttp","XMLHttpRequest","onreadystatechange","readyState","status","console","log","responseText","data","JSON","parse","err","message","open","send","currentS3path","window","location","hostname","apiResponse","response","App","props","state","name","graphoutput","traversal","showOutput","getGraphOutput","bind","handleSubmit","actorName","request","self","requestURL","APIPATH","onload","setState","event","newTraversal","target","movieInput","value","preventDefault","margin","width","shrink"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport logo from './gremlin-neptune.png';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport ReactJson from 'react-json-view';\nimport './App.css';\n\nfunction async_get(url, callback) {\n  var xmlhttp = new XMLHttpRequest();\n  xmlhttp.onreadystatechange = function() {\n      if (xmlhttp.readyState == 4 && xmlhttp.status == 200) {\n          console.log('responseText:' + xmlhttp.responseText);\n          try {\n              var data = JSON.parse(xmlhttp.responseText);\n          } catch(err) {\n              console.log(err.message + \" in \" + xmlhttp.responseText);\n              return;\n          }\n          callback(data);\n      }\n  };\n\n  xmlhttp.open(\"GET\", url, true);\n  xmlhttp.send();\n} //end function async_get\n\nvar currentS3path = window.location.hostname\nconsole.log(currentS3path)\nvar url = \"https://\" + currentS3path + \"/api.json\"\n//var url = \"https://s3.eu-central-1.amazonaws.com/neptunewsdtr/api.json\"\nconsole.log(url)\n\nvar apiResponse = \"\"\nasync_get(url, function(response) {\n  apiResponse = JSON.parse(response.responseText);\n});\n\nconsole.log(apiResponse);\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = { \n      name: \"\",\n      graphoutput: \"{}\",\n      traversal: \"\",\n      showOutput: false\n     };\n    \n    this.getGraphOutput = this.getGraphOutput.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  } //end constructor\n\n  getGraphOutput(actorName) {\n    var request = new XMLHttpRequest();\n    var self = this;\n  \n    var requestURL = apiResponse.APIPATH + \"/actor/?actor=\" + actorName\n  \n    request.open('GET', requestURL , true);\n    request.onload = function () {\n  \n      // Begin accessing JSON data here\n      var data = JSON.parse(this.response);\n  \n      if (request.status >= 200 && request.status < 400) {\n        self.setState({\n          graphoutput: data,\n          showOutput: true\n        });\n      } else {\n        return \"ERROR\";\n      }\n    }\n  \n    request.send();\n  } //getGraphOutput\n\n  handleSubmit(event) {\n    var newTraversal = \"g.V().has('name','\" + event.target.movieInput.value + \"').repeat(out().in().simplePath())\" +\n      \".until(has('name','Kevin Bacon')).path().by('name').by('title').limit(10)\"\n    this.getGraphOutput( event.target.movieInput.value );\n    this.setState({\n      name: event.target.movieInput.value,\n      traversal: newTraversal\n    })\n    console.log(event.target.movieInput.value)\n    event.preventDefault();\n  } //end handleSubmit\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <p>\n            Welcome to AWS re:Invent 2018 Workshop: <br/>\n            DAT310 - Building Your First Graph Application Using Amazon Neptune\n          </p>\n        </header>\n        <br/>\n        <form onSubmit={this.handleSubmit}>\n          <TextField\n            id=\"movieInput\"\n            label=\"Find the Six Degrees of Kevin Bacon:\"\n            style={{ margin: 8, width: 600 }}\n            placeholder=\"<Insert Actor/Actress Name Here>\"\n            helperText=\"Ex: Jack Nicholson\"\n            margin=\"normal\"\n            InputLabelProps={{\n              shrink: true,\n            }}\n          /><br/>\n          <Button variant=\"contained\" size=\"medium\" color=\"primary\" type=\"submit\">\n            Go!\n          </Button>\n        </form><br/><br/>\n        <Paper className=\"graph-output\">\n            <h3 align=\"left\">Graph Traversal:</h3>\n            <p align=\"left\">\n              <span id=\"graph-traversal\">{this.state.traversal}</span>\n            </p>\n        </Paper>\n        <br/>\n        <Paper className=\"graph-output\">\n            <h3 align=\"left\">Graph Traversal Output:</h3>\n            <div align=\"left\">\n              { this.state.showOutput ? <ReactJson src={this.state.graphoutput} /> : null }\n            </div>\n        </Paper>\n        <br/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}